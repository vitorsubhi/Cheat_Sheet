Terminals unused in grammar

    TOK_FUNCTION
    TOK_FOR
    TOK_FCHAR
    TOK_FUNSIGNED
    EQ_OP
    NE_OP
    GE_OP
    LE_OP
    GT_OP
    LT_OP


Grammar

    0 $accept: programa $end

    1 programa: stmts

    2 stmts: stmts stmt
    3      | stmt

    4 fe: funcblock
    5   | eventblock

    6 stmt: TOK_OUT '=' expr ';'
    7     | TOK_IDENTIFIER '=' expr ';'
    8     | TOK_IDENTIFIER '[' expr ']' '=' expr ';'
    9     | TOK_IDENTIFIER '(' paramscall ')' ';'
   10     | TOK_IDENTIFIER '+' '+' ';'
   11     | TOK_IDENTIFIER '+' '=' expr ';'
   12     | TOK_IDENTIFIER '-' '=' expr ';'
   13     | TOK_IDENTIFIER '*' '=' expr ';'
   14     | TOK_IDENTIFIER '=' relements ';'
   15     | TOK_IDENTIFIER '=' rmatrix ';'
   16     | TOK_DELAY expr ';'
   17     | condblock
   18     | whileblock
   19     | fe
   20     | returnblock ';'
   21     | printstmt ';'
   22     | TOK_STEPPER expr ';'
   23     | TOK_SERVO expr ';'
   24     | error ';'

   25 rmatrix: '{' matrix '}'

   26 matrix: matrix ',' melement
   27       | melement

   28 melement: relements ':' TOK_INTEGER
   29         | relements

   30 relements: '{' elements '}'

   31 elements: elements ',' element
   32         | element

   33 element: factor ':' TOK_INTEGER
   34        | factor

   35 eventblock: TOK_QUANDO TOK_INTEGER TOK_ESTA TOK_INTEGER '{' stmts '}'

   36 funcblock: type_f TOK_IDENTIFIER '(' funcparams ')' '{' stmts '}'

   37 funcparams: funcparams ',' funcparam
   38           | funcparam
   39           | %empty

   40 funcparam: type_f TOK_IDENTIFIER

   41 type_f: TOK_VOID
   42       | TOK_FBOOL
   43       | TOK_FSHORT TOK_FINT
   44       | TOK_FINT
   45       | TOK_FLONG TOK_FINT
   46       | TOK_FLONG TOK_FLONG TOK_FINT
   47       | TOK_FLONG TOK_FLONG TOK_FLONG TOK_FINT
   48       | TOK_FSHORT TOK_FFLOAT
   49       | TOK_FFLOAT
   50       | TOK_FDOUBLE
   51       | TOK_FDOUBLE TOK_FDOUBLE

   52 paramscall: paramscall ',' expr
   53           | expr
   54           | %empty

   55 returnblock: TOK_RETURN expr
   56            | TOK_RETURN logicexpr

   57 condblock: TOK_IF '(' logicexpr ')' stmt
   58          | TOK_IF '(' logicexpr ')' stmt elseblock
   59          | TOK_IF '(' logicexpr ')' '{' stmts '}'
   60          | TOK_IF '(' logicexpr ')' '{' stmts '}' elseblock

   61 elseblock: TOK_ELSE stmt
   62          | TOK_ELSE '{' stmts '}'

   63 whileblock: TOK_WHILE '(' logicexpr ')' '{' stmts '}'

   64 logicexpr: logicexpr TOK_OR logicterm
   65          | logicterm

   66 logicterm: logicterm TOK_AND logicfactor
   67          | logicfactor

   68 logicfactor: '(' logicexpr ')'
   69            | expr '=' '=' expr
   70            | expr '!' '=' expr
   71            | expr '<' '=' expr
   72            | expr '>' '=' expr
   73            | expr '<' expr
   74            | expr '>' expr

   75 expr: expr '+' term
   76     | expr '-' term
   77     | term

   78 term: term '*' factor
   79     | term '/' factor
   80     | term '%' factor
   81     | factor

   82 factor: '(' expr ')'
   83       | TOK_IDENTIFIER
   84       | TOK_IDENTIFIER '[' expr ']'
   85       | TOK_IDENTIFIER '[' expr ']' '[' expr ']'
   86       | TOK_TRUE
   87       | TOK_FALSE
   88       | TOK_INTEGER
   89       | TOK_FLOAT
   90       | '(' TOK_FSHORT TOK_FINT ')' TOK_INTEGER
   91       | '(' TOK_FLONG TOK_FINT ')' TOK_INTEGER
   92       | '(' TOK_FLONG TOK_FLONG TOK_FINT ')' TOK_INTEGER
   93       | '(' TOK_FSHORT TOK_FFLOAT ')' TOK_FLOAT
   94       | '(' TOK_FFLOAT ')' TOK_FLOAT
   95       | '(' TOK_FDOUBLE ')' TOK_FLOAT
   96       | TOK_IN
   97       | TOK_IDENTIFIER '(' paramscall ')'
   98       | unary

   99 unary: '-' factor

  100 printstmt: TOK_PRINT TOK_STRING
  101          | TOK_PRINT expr


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 70
    '%' (37) 80
    '(' (40) 9 36 57 58 59 60 63 68 82 90 91 92 93 94 95 97
    ')' (41) 9 36 57 58 59 60 63 68 82 90 91 92 93 94 95 97
    '*' (42) 13 78
    '+' (43) 10 11 75
    ',' (44) 26 31 37 52
    '-' (45) 12 76 99
    '/' (47) 79
    ':' (58) 28 33
    ';' (59) 6 7 8 9 10 11 12 13 14 15 16 20 21 22 23 24
    '<' (60) 71 73
    '=' (61) 6 7 8 11 12 13 14 15 69 70 71 72
    '>' (62) 72 74
    '[' (91) 8 84 85
    ']' (93) 8 84 85
    '{' (123) 25 30 35 36 59 60 62 63
    '}' (125) 25 30 35 36 59 60 62 63
    error (256) 24
    TOK_VOID (258) 41
    TOK_FUNCTION (259)
    TOK_RETURN (260) 55 56
    TOK_IF (261) 57 58 59 60
    TOK_ELSE (262) 61 62
    TOK_FOR (263)
    TOK_WHILE (264) 63
    TOK_PRINT (265) 100 101
    TOK_IN <port> (266) 96
    TOK_OUT <port> (267) 6
    TOK_STEPPER <nint> (268) 22
    TOK_SERVO (269) 23
    TOK_DELAY (270) 16
    TOK_AND <node> (271) 66
    TOK_OR <node> (272) 64
    TOK_IDENTIFIER <ident> (273) 7 8 9 10 11 12 13 14 15 36 40 83 84 85 97
    TOK_FLOAT <nfloat> (274) 89 93 94 95
    TOK_INTEGER <nint> (275) 28 33 35 88 90 91 92
    TOK_STRING <str> (276) 100
    TOK_TRUE (277) 86
    TOK_FALSE (278) 87
    TOK_FINT (279) 43 44 45 46 47 90 91 92
    TOK_FFLOAT (280) 48 49 93 94
    TOK_FDOUBLE (281) 50 51 95
    TOK_FCHAR (282)
    TOK_FLONG (283) 45 46 47 91 92
    TOK_FSHORT (284) 43 48 90 93
    TOK_FUNSIGNED (285)
    TOK_FBOOL (286) 42
    TOK_QUANDO (287) 35
    TOK_ESTA (288) 35
    EQ_OP (289)
    NE_OP (290)
    GE_OP (291)
    LE_OP (292)
    GT_OP (293)
    LT_OP (294)
    IFX (295)


Nonterminals, with rules where they appear

    $accept (59)
        on left: 0
    programa (60)
        on left: 1
        on right: 0
    stmts <stmt> (61)
        on left: 2 3
        on right: 1 2 35 36 59 60 62 63
    fe <node> (62)
        on left: 4 5
        on right: 19
    stmt <node> (63)
        on left: 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
        on right: 2 3 57 58 61
    rmatrix <mes> (64)
        on left: 25
        on right: 15
    matrix <mes> (65)
        on left: 26 27
        on right: 25 26
    melement <me> (66)
        on left: 28 29
        on right: 26 27
    relements <aes> (67)
        on left: 30
        on right: 14 28 29
    elements <aes> (68)
        on left: 31 32
        on right: 30 31
    element <ae> (69)
        on left: 33 34
        on right: 31 32
    eventblock <node> (70)
        on left: 35
        on right: 5
    funcblock <node> (71)
        on left: 36
        on right: 4
    funcparams <fps> (72)
        on left: 37 38 39
        on right: 36 37
    funcparam <fp> (73)
        on left: 40
        on right: 37 38
    type_f <nint> (74)
        on left: 41 42 43 44 45 46 47 48 49 50 51
        on right: 36 40
    paramscall <pc> (75)
        on left: 52 53 54
        on right: 9 52 97
    returnblock <node> (76)
        on left: 55 56
        on right: 20
    condblock <node> (77)
        on left: 57 58 59 60
        on right: 17
    elseblock <node> (78)
        on left: 61 62
        on right: 58 60
    whileblock <node> (79)
        on left: 63
        on right: 18
    logicexpr <node> (80)
        on left: 64 65
        on right: 56 57 58 59 60 63 64 68
    logicterm <node> (81)
        on left: 66 67
        on right: 64 65 66
    logicfactor <node> (82)
        on left: 68 69 70 71 72 73 74
        on right: 66 67
    expr <node> (83)
        on left: 75 76 77
        on right: 6 7 8 11 12 13 16 22 23 52 53 55 69 70 71 72 73 74 75 76 82 84 85 101
    term <node> (84)
        on left: 78 79 80 81
        on right: 75 76 77 78 79 80
    factor <node> (85)
        on left: 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98
        on right: 33 34 78 79 80 81 99
    unary <node> (86)
        on left: 99
        on right: 98
    printstmt <node> (87)
        on left: 100 101
        on right: 21


State 0

    0 $accept: • programa $end

    error           shift, and go to state 1
    TOK_VOID        shift, and go to state 2
    TOK_RETURN      shift, and go to state 3
    TOK_IF          shift, and go to state 4
    TOK_WHILE       shift, and go to state 5
    TOK_PRINT       shift, and go to state 6
    TOK_OUT         shift, and go to state 7
    TOK_STEPPER     shift, and go to state 8
    TOK_SERVO       shift, and go to state 9
    TOK_DELAY       shift, and go to state 10
    TOK_IDENTIFIER  shift, and go to state 11
    TOK_FINT        shift, and go to state 12
    TOK_FFLOAT      shift, and go to state 13
    TOK_FDOUBLE     shift, and go to state 14
    TOK_FLONG       shift, and go to state 15
    TOK_FSHORT      shift, and go to state 16
    TOK_FBOOL       shift, and go to state 17
    TOK_QUANDO      shift, and go to state 18

    programa     go to state 19
    stmts        go to state 20
    fe           go to state 21
    stmt         go to state 22
    eventblock   go to state 23
    funcblock    go to state 24
    type_f       go to state 25
    returnblock  go to state 26
    condblock    go to state 27
    whileblock   go to state 28
    printstmt    go to state 29


State 1

   24 stmt: error • ';'

    ';'  shift, and go to state 30


State 2

   41 type_f: TOK_VOID •

    $default  reduce using rule 41 (type_f)


State 3

   55 returnblock: TOK_RETURN • expr
   56            | TOK_RETURN • logicexpr

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 37
    '-'             shift, and go to state 38

    logicexpr    go to state 39
    logicterm    go to state 40
    logicfactor  go to state 41
    expr         go to state 42
    term         go to state 43
    factor       go to state 44
    unary        go to state 45


State 4

   57 condblock: TOK_IF • '(' logicexpr ')' stmt
   58          | TOK_IF • '(' logicexpr ')' stmt elseblock
   59          | TOK_IF • '(' logicexpr ')' '{' stmts '}'
   60          | TOK_IF • '(' logicexpr ')' '{' stmts '}' elseblock

    '('  shift, and go to state 46


State 5

   63 whileblock: TOK_WHILE • '(' logicexpr ')' '{' stmts '}'

    '('  shift, and go to state 47


State 6

  100 printstmt: TOK_PRINT • TOK_STRING
  101          | TOK_PRINT • expr

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_STRING      shift, and go to state 48
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    expr    go to state 50
    term    go to state 43
    factor  go to state 44
    unary   go to state 45


State 7

    6 stmt: TOK_OUT • '=' expr ';'

    '='  shift, and go to state 51


State 8

   22 stmt: TOK_STEPPER • expr ';'

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    expr    go to state 52
    term    go to state 43
    factor  go to state 44
    unary   go to state 45


State 9

   23 stmt: TOK_SERVO • expr ';'

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    expr    go to state 53
    term    go to state 43
    factor  go to state 44
    unary   go to state 45


State 10

   16 stmt: TOK_DELAY • expr ';'

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    expr    go to state 54
    term    go to state 43
    factor  go to state 44
    unary   go to state 45


State 11

    7 stmt: TOK_IDENTIFIER • '=' expr ';'
    8     | TOK_IDENTIFIER • '[' expr ']' '=' expr ';'
    9     | TOK_IDENTIFIER • '(' paramscall ')' ';'
   10     | TOK_IDENTIFIER • '+' '+' ';'
   11     | TOK_IDENTIFIER • '+' '=' expr ';'
   12     | TOK_IDENTIFIER • '-' '=' expr ';'
   13     | TOK_IDENTIFIER • '*' '=' expr ';'
   14     | TOK_IDENTIFIER • '=' relements ';'
   15     | TOK_IDENTIFIER • '=' rmatrix ';'

    '='  shift, and go to state 55
    '['  shift, and go to state 56
    '('  shift, and go to state 57
    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '*'  shift, and go to state 60


State 12

   44 type_f: TOK_FINT •

    $default  reduce using rule 44 (type_f)


State 13

   49 type_f: TOK_FFLOAT •

    $default  reduce using rule 49 (type_f)


State 14

   50 type_f: TOK_FDOUBLE •
   51       | TOK_FDOUBLE • TOK_FDOUBLE

    TOK_FDOUBLE  shift, and go to state 61

    $default  reduce using rule 50 (type_f)


State 15

   45 type_f: TOK_FLONG • TOK_FINT
   46       | TOK_FLONG • TOK_FLONG TOK_FINT
   47       | TOK_FLONG • TOK_FLONG TOK_FLONG TOK_FINT

    TOK_FINT   shift, and go to state 62
    TOK_FLONG  shift, and go to state 63


State 16

   43 type_f: TOK_FSHORT • TOK_FINT
   48       | TOK_FSHORT • TOK_FFLOAT

    TOK_FINT    shift, and go to state 64
    TOK_FFLOAT  shift, and go to state 65


State 17

   42 type_f: TOK_FBOOL •

    $default  reduce using rule 42 (type_f)


State 18

   35 eventblock: TOK_QUANDO • TOK_INTEGER TOK_ESTA TOK_INTEGER '{' stmts '}'

    TOK_INTEGER  shift, and go to state 66


State 19

    0 $accept: programa • $end

    $end  shift, and go to state 67


State 20

    1 programa: stmts •
    2 stmts: stmts • stmt

    error           shift, and go to state 1
    TOK_VOID        shift, and go to state 2
    TOK_RETURN      shift, and go to state 3
    TOK_IF          shift, and go to state 4
    TOK_WHILE       shift, and go to state 5
    TOK_PRINT       shift, and go to state 6
    TOK_OUT         shift, and go to state 7
    TOK_STEPPER     shift, and go to state 8
    TOK_SERVO       shift, and go to state 9
    TOK_DELAY       shift, and go to state 10
    TOK_IDENTIFIER  shift, and go to state 11
    TOK_FINT        shift, and go to state 12
    TOK_FFLOAT      shift, and go to state 13
    TOK_FDOUBLE     shift, and go to state 14
    TOK_FLONG       shift, and go to state 15
    TOK_FSHORT      shift, and go to state 16
    TOK_FBOOL       shift, and go to state 17
    TOK_QUANDO      shift, and go to state 18

    $end  reduce using rule 1 (programa)

    fe           go to state 21
    stmt         go to state 68
    eventblock   go to state 23
    funcblock    go to state 24
    type_f       go to state 25
    returnblock  go to state 26
    condblock    go to state 27
    whileblock   go to state 28
    printstmt    go to state 29


State 21

   19 stmt: fe •

    $default  reduce using rule 19 (stmt)


State 22

    3 stmts: stmt •

    $default  reduce using rule 3 (stmts)


State 23

    5 fe: eventblock •

    $default  reduce using rule 5 (fe)


State 24

    4 fe: funcblock •

    $default  reduce using rule 4 (fe)


State 25

   36 funcblock: type_f • TOK_IDENTIFIER '(' funcparams ')' '{' stmts '}'

    TOK_IDENTIFIER  shift, and go to state 69


State 26

   20 stmt: returnblock • ';'

    ';'  shift, and go to state 70


State 27

   17 stmt: condblock •

    $default  reduce using rule 17 (stmt)


State 28

   18 stmt: whileblock •

    $default  reduce using rule 18 (stmt)


State 29

   21 stmt: printstmt • ';'

    ';'  shift, and go to state 71


State 30

   24 stmt: error ';' •

    $default  reduce using rule 24 (stmt)


State 31

   96 factor: TOK_IN •

    $default  reduce using rule 96 (factor)


State 32

   83 factor: TOK_IDENTIFIER •
   84       | TOK_IDENTIFIER • '[' expr ']'
   85       | TOK_IDENTIFIER • '[' expr ']' '[' expr ']'
   97       | TOK_IDENTIFIER • '(' paramscall ')'

    '['  shift, and go to state 72
    '('  shift, and go to state 73

    $default  reduce using rule 83 (factor)


State 33

   89 factor: TOK_FLOAT •

    $default  reduce using rule 89 (factor)


State 34

   88 factor: TOK_INTEGER •

    $default  reduce using rule 88 (factor)


State 35

   86 factor: TOK_TRUE •

    $default  reduce using rule 86 (factor)


State 36

   87 factor: TOK_FALSE •

    $default  reduce using rule 87 (factor)


State 37

   68 logicfactor: '(' • logicexpr ')'
   82 factor: '(' • expr ')'
   90       | '(' • TOK_FSHORT TOK_FINT ')' TOK_INTEGER
   91       | '(' • TOK_FLONG TOK_FINT ')' TOK_INTEGER
   92       | '(' • TOK_FLONG TOK_FLONG TOK_FINT ')' TOK_INTEGER
   93       | '(' • TOK_FSHORT TOK_FFLOAT ')' TOK_FLOAT
   94       | '(' • TOK_FFLOAT ')' TOK_FLOAT
   95       | '(' • TOK_FDOUBLE ')' TOK_FLOAT

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    TOK_FFLOAT      shift, and go to state 74
    TOK_FDOUBLE     shift, and go to state 75
    TOK_FLONG       shift, and go to state 76
    TOK_FSHORT      shift, and go to state 77
    '('             shift, and go to state 37
    '-'             shift, and go to state 38

    logicexpr    go to state 78
    logicterm    go to state 40
    logicfactor  go to state 41
    expr         go to state 79
    term         go to state 43
    factor       go to state 44
    unary        go to state 45


State 38

   99 unary: '-' • factor

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    factor  go to state 80
    unary   go to state 45


State 39

   56 returnblock: TOK_RETURN logicexpr •
   64 logicexpr: logicexpr • TOK_OR logicterm

    TOK_OR  shift, and go to state 81

    $default  reduce using rule 56 (returnblock)


State 40

   65 logicexpr: logicterm •
   66 logicterm: logicterm • TOK_AND logicfactor

    TOK_AND  shift, and go to state 82

    $default  reduce using rule 65 (logicexpr)


State 41

   67 logicterm: logicfactor •

    $default  reduce using rule 67 (logicterm)


State 42

   55 returnblock: TOK_RETURN expr •
   69 logicfactor: expr • '=' '=' expr
   70            | expr • '!' '=' expr
   71            | expr • '<' '=' expr
   72            | expr • '>' '=' expr
   73            | expr • '<' expr
   74            | expr • '>' expr
   75 expr: expr • '+' term
   76     | expr • '-' term

    '='  shift, and go to state 83
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '!'  shift, and go to state 86
    '<'  shift, and go to state 87
    '>'  shift, and go to state 88

    $default  reduce using rule 55 (returnblock)


State 43

   77 expr: term •
   78 term: term • '*' factor
   79     | term • '/' factor
   80     | term • '%' factor

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 77 (expr)


State 44

   81 term: factor •

    $default  reduce using rule 81 (term)


State 45

   98 factor: unary •

    $default  reduce using rule 98 (factor)


State 46

   57 condblock: TOK_IF '(' • logicexpr ')' stmt
   58          | TOK_IF '(' • logicexpr ')' stmt elseblock
   59          | TOK_IF '(' • logicexpr ')' '{' stmts '}'
   60          | TOK_IF '(' • logicexpr ')' '{' stmts '}' elseblock

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 37
    '-'             shift, and go to state 38

    logicexpr    go to state 92
    logicterm    go to state 40
    logicfactor  go to state 41
    expr         go to state 93
    term         go to state 43
    factor       go to state 44
    unary        go to state 45


State 47

   63 whileblock: TOK_WHILE '(' • logicexpr ')' '{' stmts '}'

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 37
    '-'             shift, and go to state 38

    logicexpr    go to state 94
    logicterm    go to state 40
    logicfactor  go to state 41
    expr         go to state 93
    term         go to state 43
    factor       go to state 44
    unary        go to state 45


State 48

  100 printstmt: TOK_PRINT TOK_STRING •

    $default  reduce using rule 100 (printstmt)


State 49

   82 factor: '(' • expr ')'
   90       | '(' • TOK_FSHORT TOK_FINT ')' TOK_INTEGER
   91       | '(' • TOK_FLONG TOK_FINT ')' TOK_INTEGER
   92       | '(' • TOK_FLONG TOK_FLONG TOK_FINT ')' TOK_INTEGER
   93       | '(' • TOK_FSHORT TOK_FFLOAT ')' TOK_FLOAT
   94       | '(' • TOK_FFLOAT ')' TOK_FLOAT
   95       | '(' • TOK_FDOUBLE ')' TOK_FLOAT

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    TOK_FFLOAT      shift, and go to state 74
    TOK_FDOUBLE     shift, and go to state 75
    TOK_FLONG       shift, and go to state 76
    TOK_FSHORT      shift, and go to state 77
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    expr    go to state 95
    term    go to state 43
    factor  go to state 44
    unary   go to state 45


State 50

   75 expr: expr • '+' term
   76     | expr • '-' term
  101 printstmt: TOK_PRINT expr •

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85

    $default  reduce using rule 101 (printstmt)


State 51

    6 stmt: TOK_OUT '=' • expr ';'

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    expr    go to state 96
    term    go to state 43
    factor  go to state 44
    unary   go to state 45


State 52

   22 stmt: TOK_STEPPER expr • ';'
   75 expr: expr • '+' term
   76     | expr • '-' term

    ';'  shift, and go to state 97
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85


State 53

   23 stmt: TOK_SERVO expr • ';'
   75 expr: expr • '+' term
   76     | expr • '-' term

    ';'  shift, and go to state 98
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85


State 54

   16 stmt: TOK_DELAY expr • ';'
   75 expr: expr • '+' term
   76     | expr • '-' term

    ';'  shift, and go to state 99
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85


State 55

    7 stmt: TOK_IDENTIFIER '=' • expr ';'
   14     | TOK_IDENTIFIER '=' • relements ';'
   15     | TOK_IDENTIFIER '=' • rmatrix ';'

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38
    '{'             shift, and go to state 100

    rmatrix    go to state 101
    relements  go to state 102
    expr       go to state 103
    term       go to state 43
    factor     go to state 44
    unary      go to state 45


State 56

    8 stmt: TOK_IDENTIFIER '[' • expr ']' '=' expr ';'

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    expr    go to state 104
    term    go to state 43
    factor  go to state 44
    unary   go to state 45


State 57

    9 stmt: TOK_IDENTIFIER '(' • paramscall ')' ';'

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    $default  reduce using rule 54 (paramscall)

    paramscall  go to state 105
    expr        go to state 106
    term        go to state 43
    factor      go to state 44
    unary       go to state 45


State 58

   10 stmt: TOK_IDENTIFIER '+' • '+' ';'
   11     | TOK_IDENTIFIER '+' • '=' expr ';'

    '='  shift, and go to state 107
    '+'  shift, and go to state 108


State 59

   12 stmt: TOK_IDENTIFIER '-' • '=' expr ';'

    '='  shift, and go to state 109


State 60

   13 stmt: TOK_IDENTIFIER '*' • '=' expr ';'

    '='  shift, and go to state 110


State 61

   51 type_f: TOK_FDOUBLE TOK_FDOUBLE •

    $default  reduce using rule 51 (type_f)


State 62

   45 type_f: TOK_FLONG TOK_FINT •

    $default  reduce using rule 45 (type_f)


State 63

   46 type_f: TOK_FLONG TOK_FLONG • TOK_FINT
   47       | TOK_FLONG TOK_FLONG • TOK_FLONG TOK_FINT

    TOK_FINT   shift, and go to state 111
    TOK_FLONG  shift, and go to state 112


State 64

   43 type_f: TOK_FSHORT TOK_FINT •

    $default  reduce using rule 43 (type_f)


State 65

   48 type_f: TOK_FSHORT TOK_FFLOAT •

    $default  reduce using rule 48 (type_f)


State 66

   35 eventblock: TOK_QUANDO TOK_INTEGER • TOK_ESTA TOK_INTEGER '{' stmts '}'

    TOK_ESTA  shift, and go to state 113


State 67

    0 $accept: programa $end •

    $default  accept


State 68

    2 stmts: stmts stmt •

    $default  reduce using rule 2 (stmts)


State 69

   36 funcblock: type_f TOK_IDENTIFIER • '(' funcparams ')' '{' stmts '}'

    '('  shift, and go to state 114


State 70

   20 stmt: returnblock ';' •

    $default  reduce using rule 20 (stmt)


State 71

   21 stmt: printstmt ';' •

    $default  reduce using rule 21 (stmt)


State 72

   84 factor: TOK_IDENTIFIER '[' • expr ']'
   85       | TOK_IDENTIFIER '[' • expr ']' '[' expr ']'

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    expr    go to state 115
    term    go to state 43
    factor  go to state 44
    unary   go to state 45


State 73

   97 factor: TOK_IDENTIFIER '(' • paramscall ')'

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    $default  reduce using rule 54 (paramscall)

    paramscall  go to state 116
    expr        go to state 106
    term        go to state 43
    factor      go to state 44
    unary       go to state 45


State 74

   94 factor: '(' TOK_FFLOAT • ')' TOK_FLOAT

    ')'  shift, and go to state 117


State 75

   95 factor: '(' TOK_FDOUBLE • ')' TOK_FLOAT

    ')'  shift, and go to state 118


State 76

   91 factor: '(' TOK_FLONG • TOK_FINT ')' TOK_INTEGER
   92       | '(' TOK_FLONG • TOK_FLONG TOK_FINT ')' TOK_INTEGER

    TOK_FINT   shift, and go to state 119
    TOK_FLONG  shift, and go to state 120


State 77

   90 factor: '(' TOK_FSHORT • TOK_FINT ')' TOK_INTEGER
   93       | '(' TOK_FSHORT • TOK_FFLOAT ')' TOK_FLOAT

    TOK_FINT    shift, and go to state 121
    TOK_FFLOAT  shift, and go to state 122


State 78

   64 logicexpr: logicexpr • TOK_OR logicterm
   68 logicfactor: '(' logicexpr • ')'

    TOK_OR  shift, and go to state 81
    ')'     shift, and go to state 123


State 79

   69 logicfactor: expr • '=' '=' expr
   70            | expr • '!' '=' expr
   71            | expr • '<' '=' expr
   72            | expr • '>' '=' expr
   73            | expr • '<' expr
   74            | expr • '>' expr
   75 expr: expr • '+' term
   76     | expr • '-' term
   82 factor: '(' expr • ')'

    '='  shift, and go to state 83
    ')'  shift, and go to state 124
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '!'  shift, and go to state 86
    '<'  shift, and go to state 87
    '>'  shift, and go to state 88


State 80

   99 unary: '-' factor •

    $default  reduce using rule 99 (unary)


State 81

   64 logicexpr: logicexpr TOK_OR • logicterm

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 37
    '-'             shift, and go to state 38

    logicterm    go to state 125
    logicfactor  go to state 41
    expr         go to state 93
    term         go to state 43
    factor       go to state 44
    unary        go to state 45


State 82

   66 logicterm: logicterm TOK_AND • logicfactor

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 37
    '-'             shift, and go to state 38

    logicfactor  go to state 126
    expr         go to state 93
    term         go to state 43
    factor       go to state 44
    unary        go to state 45


State 83

   69 logicfactor: expr '=' • '=' expr

    '='  shift, and go to state 127


State 84

   75 expr: expr '+' • term

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    term    go to state 128
    factor  go to state 44
    unary   go to state 45


State 85

   76 expr: expr '-' • term

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    term    go to state 129
    factor  go to state 44
    unary   go to state 45


State 86

   70 logicfactor: expr '!' • '=' expr

    '='  shift, and go to state 130


State 87

   71 logicfactor: expr '<' • '=' expr
   73            | expr '<' • expr

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '='             shift, and go to state 131
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    expr    go to state 132
    term    go to state 43
    factor  go to state 44
    unary   go to state 45


State 88

   72 logicfactor: expr '>' • '=' expr
   74            | expr '>' • expr

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '='             shift, and go to state 133
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    expr    go to state 134
    term    go to state 43
    factor  go to state 44
    unary   go to state 45


State 89

   78 term: term '*' • factor

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    factor  go to state 135
    unary   go to state 45


State 90

   79 term: term '/' • factor

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    factor  go to state 136
    unary   go to state 45


State 91

   80 term: term '%' • factor

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    factor  go to state 137
    unary   go to state 45


State 92

   57 condblock: TOK_IF '(' logicexpr • ')' stmt
   58          | TOK_IF '(' logicexpr • ')' stmt elseblock
   59          | TOK_IF '(' logicexpr • ')' '{' stmts '}'
   60          | TOK_IF '(' logicexpr • ')' '{' stmts '}' elseblock
   64 logicexpr: logicexpr • TOK_OR logicterm

    TOK_OR  shift, and go to state 81
    ')'     shift, and go to state 138


State 93

   69 logicfactor: expr • '=' '=' expr
   70            | expr • '!' '=' expr
   71            | expr • '<' '=' expr
   72            | expr • '>' '=' expr
   73            | expr • '<' expr
   74            | expr • '>' expr
   75 expr: expr • '+' term
   76     | expr • '-' term

    '='  shift, and go to state 83
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '!'  shift, and go to state 86
    '<'  shift, and go to state 87
    '>'  shift, and go to state 88


State 94

   63 whileblock: TOK_WHILE '(' logicexpr • ')' '{' stmts '}'
   64 logicexpr: logicexpr • TOK_OR logicterm

    TOK_OR  shift, and go to state 81
    ')'     shift, and go to state 139


State 95

   75 expr: expr • '+' term
   76     | expr • '-' term
   82 factor: '(' expr • ')'

    ')'  shift, and go to state 124
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85


State 96

    6 stmt: TOK_OUT '=' expr • ';'
   75 expr: expr • '+' term
   76     | expr • '-' term

    ';'  shift, and go to state 140
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85


State 97

   22 stmt: TOK_STEPPER expr ';' •

    $default  reduce using rule 22 (stmt)


State 98

   23 stmt: TOK_SERVO expr ';' •

    $default  reduce using rule 23 (stmt)


State 99

   16 stmt: TOK_DELAY expr ';' •

    $default  reduce using rule 16 (stmt)


State 100

   25 rmatrix: '{' • matrix '}'
   30 relements: '{' • elements '}'

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38
    '{'             shift, and go to state 141

    matrix     go to state 142
    melement   go to state 143
    relements  go to state 144
    elements   go to state 145
    element    go to state 146
    factor     go to state 147
    unary      go to state 45


State 101

   15 stmt: TOK_IDENTIFIER '=' rmatrix • ';'

    ';'  shift, and go to state 148


State 102

   14 stmt: TOK_IDENTIFIER '=' relements • ';'

    ';'  shift, and go to state 149


State 103

    7 stmt: TOK_IDENTIFIER '=' expr • ';'
   75 expr: expr • '+' term
   76     | expr • '-' term

    ';'  shift, and go to state 150
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85


State 104

    8 stmt: TOK_IDENTIFIER '[' expr • ']' '=' expr ';'
   75 expr: expr • '+' term
   76     | expr • '-' term

    ']'  shift, and go to state 151
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85


State 105

    9 stmt: TOK_IDENTIFIER '(' paramscall • ')' ';'
   52 paramscall: paramscall • ',' expr

    ')'  shift, and go to state 152
    ','  shift, and go to state 153


State 106

   53 paramscall: expr •
   75 expr: expr • '+' term
   76     | expr • '-' term

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85

    $default  reduce using rule 53 (paramscall)


State 107

   11 stmt: TOK_IDENTIFIER '+' '=' • expr ';'

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    expr    go to state 154
    term    go to state 43
    factor  go to state 44
    unary   go to state 45


State 108

   10 stmt: TOK_IDENTIFIER '+' '+' • ';'

    ';'  shift, and go to state 155


State 109

   12 stmt: TOK_IDENTIFIER '-' '=' • expr ';'

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    expr    go to state 156
    term    go to state 43
    factor  go to state 44
    unary   go to state 45


State 110

   13 stmt: TOK_IDENTIFIER '*' '=' • expr ';'

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    expr    go to state 157
    term    go to state 43
    factor  go to state 44
    unary   go to state 45


State 111

   46 type_f: TOK_FLONG TOK_FLONG TOK_FINT •

    $default  reduce using rule 46 (type_f)


State 112

   47 type_f: TOK_FLONG TOK_FLONG TOK_FLONG • TOK_FINT

    TOK_FINT  shift, and go to state 158


State 113

   35 eventblock: TOK_QUANDO TOK_INTEGER TOK_ESTA • TOK_INTEGER '{' stmts '}'

    TOK_INTEGER  shift, and go to state 159


State 114

   36 funcblock: type_f TOK_IDENTIFIER '(' • funcparams ')' '{' stmts '}'

    TOK_VOID     shift, and go to state 2
    TOK_FINT     shift, and go to state 12
    TOK_FFLOAT   shift, and go to state 13
    TOK_FDOUBLE  shift, and go to state 14
    TOK_FLONG    shift, and go to state 15
    TOK_FSHORT   shift, and go to state 16
    TOK_FBOOL    shift, and go to state 17

    $default  reduce using rule 39 (funcparams)

    funcparams  go to state 160
    funcparam   go to state 161
    type_f      go to state 162


State 115

   75 expr: expr • '+' term
   76     | expr • '-' term
   84 factor: TOK_IDENTIFIER '[' expr • ']'
   85       | TOK_IDENTIFIER '[' expr • ']' '[' expr ']'

    ']'  shift, and go to state 163
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85


State 116

   52 paramscall: paramscall • ',' expr
   97 factor: TOK_IDENTIFIER '(' paramscall • ')'

    ')'  shift, and go to state 164
    ','  shift, and go to state 153


State 117

   94 factor: '(' TOK_FFLOAT ')' • TOK_FLOAT

    TOK_FLOAT  shift, and go to state 165


State 118

   95 factor: '(' TOK_FDOUBLE ')' • TOK_FLOAT

    TOK_FLOAT  shift, and go to state 166


State 119

   91 factor: '(' TOK_FLONG TOK_FINT • ')' TOK_INTEGER

    ')'  shift, and go to state 167


State 120

   92 factor: '(' TOK_FLONG TOK_FLONG • TOK_FINT ')' TOK_INTEGER

    TOK_FINT  shift, and go to state 168


State 121

   90 factor: '(' TOK_FSHORT TOK_FINT • ')' TOK_INTEGER

    ')'  shift, and go to state 169


State 122

   93 factor: '(' TOK_FSHORT TOK_FFLOAT • ')' TOK_FLOAT

    ')'  shift, and go to state 170


State 123

   68 logicfactor: '(' logicexpr ')' •

    $default  reduce using rule 68 (logicfactor)


State 124

   82 factor: '(' expr ')' •

    $default  reduce using rule 82 (factor)


State 125

   64 logicexpr: logicexpr TOK_OR logicterm •
   66 logicterm: logicterm • TOK_AND logicfactor

    TOK_AND  shift, and go to state 82

    $default  reduce using rule 64 (logicexpr)


State 126

   66 logicterm: logicterm TOK_AND logicfactor •

    $default  reduce using rule 66 (logicterm)


State 127

   69 logicfactor: expr '=' '=' • expr

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    expr    go to state 171
    term    go to state 43
    factor  go to state 44
    unary   go to state 45


State 128

   75 expr: expr '+' term •
   78 term: term • '*' factor
   79     | term • '/' factor
   80     | term • '%' factor

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 75 (expr)


State 129

   76 expr: expr '-' term •
   78 term: term • '*' factor
   79     | term • '/' factor
   80     | term • '%' factor

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 76 (expr)


State 130

   70 logicfactor: expr '!' '=' • expr

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    expr    go to state 172
    term    go to state 43
    factor  go to state 44
    unary   go to state 45


State 131

   71 logicfactor: expr '<' '=' • expr

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    expr    go to state 173
    term    go to state 43
    factor  go to state 44
    unary   go to state 45


State 132

   73 logicfactor: expr '<' expr •
   75 expr: expr • '+' term
   76     | expr • '-' term

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85

    $default  reduce using rule 73 (logicfactor)


State 133

   72 logicfactor: expr '>' '=' • expr

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    expr    go to state 174
    term    go to state 43
    factor  go to state 44
    unary   go to state 45


State 134

   74 logicfactor: expr '>' expr •
   75 expr: expr • '+' term
   76     | expr • '-' term

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85

    $default  reduce using rule 74 (logicfactor)


State 135

   78 term: term '*' factor •

    $default  reduce using rule 78 (term)


State 136

   79 term: term '/' factor •

    $default  reduce using rule 79 (term)


State 137

   80 term: term '%' factor •

    $default  reduce using rule 80 (term)


State 138

   57 condblock: TOK_IF '(' logicexpr ')' • stmt
   58          | TOK_IF '(' logicexpr ')' • stmt elseblock
   59          | TOK_IF '(' logicexpr ')' • '{' stmts '}'
   60          | TOK_IF '(' logicexpr ')' • '{' stmts '}' elseblock

    error           shift, and go to state 1
    TOK_VOID        shift, and go to state 2
    TOK_RETURN      shift, and go to state 3
    TOK_IF          shift, and go to state 4
    TOK_WHILE       shift, and go to state 5
    TOK_PRINT       shift, and go to state 6
    TOK_OUT         shift, and go to state 7
    TOK_STEPPER     shift, and go to state 8
    TOK_SERVO       shift, and go to state 9
    TOK_DELAY       shift, and go to state 10
    TOK_IDENTIFIER  shift, and go to state 11
    TOK_FINT        shift, and go to state 12
    TOK_FFLOAT      shift, and go to state 13
    TOK_FDOUBLE     shift, and go to state 14
    TOK_FLONG       shift, and go to state 15
    TOK_FSHORT      shift, and go to state 16
    TOK_FBOOL       shift, and go to state 17
    TOK_QUANDO      shift, and go to state 18
    '{'             shift, and go to state 175

    fe           go to state 21
    stmt         go to state 176
    eventblock   go to state 23
    funcblock    go to state 24
    type_f       go to state 25
    returnblock  go to state 26
    condblock    go to state 27
    whileblock   go to state 28
    printstmt    go to state 29


State 139

   63 whileblock: TOK_WHILE '(' logicexpr ')' • '{' stmts '}'

    '{'  shift, and go to state 177


State 140

    6 stmt: TOK_OUT '=' expr ';' •

    $default  reduce using rule 6 (stmt)


State 141

   30 relements: '{' • elements '}'

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    elements  go to state 145
    element   go to state 146
    factor    go to state 147
    unary     go to state 45


State 142

   25 rmatrix: '{' matrix • '}'
   26 matrix: matrix • ',' melement

    '}'  shift, and go to state 178
    ','  shift, and go to state 179


State 143

   27 matrix: melement •

    $default  reduce using rule 27 (matrix)


State 144

   28 melement: relements • ':' TOK_INTEGER
   29         | relements •

    ':'  shift, and go to state 180

    $default  reduce using rule 29 (melement)


State 145

   30 relements: '{' elements • '}'
   31 elements: elements • ',' element

    '}'  shift, and go to state 181
    ','  shift, and go to state 182


State 146

   32 elements: element •

    $default  reduce using rule 32 (elements)


State 147

   33 element: factor • ':' TOK_INTEGER
   34        | factor •

    ':'  shift, and go to state 183

    $default  reduce using rule 34 (element)


State 148

   15 stmt: TOK_IDENTIFIER '=' rmatrix ';' •

    $default  reduce using rule 15 (stmt)


State 149

   14 stmt: TOK_IDENTIFIER '=' relements ';' •

    $default  reduce using rule 14 (stmt)


State 150

    7 stmt: TOK_IDENTIFIER '=' expr ';' •

    $default  reduce using rule 7 (stmt)


State 151

    8 stmt: TOK_IDENTIFIER '[' expr ']' • '=' expr ';'

    '='  shift, and go to state 184


State 152

    9 stmt: TOK_IDENTIFIER '(' paramscall ')' • ';'

    ';'  shift, and go to state 185


State 153

   52 paramscall: paramscall ',' • expr

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    expr    go to state 186
    term    go to state 43
    factor  go to state 44
    unary   go to state 45


State 154

   11 stmt: TOK_IDENTIFIER '+' '=' expr • ';'
   75 expr: expr • '+' term
   76     | expr • '-' term

    ';'  shift, and go to state 187
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85


State 155

   10 stmt: TOK_IDENTIFIER '+' '+' ';' •

    $default  reduce using rule 10 (stmt)


State 156

   12 stmt: TOK_IDENTIFIER '-' '=' expr • ';'
   75 expr: expr • '+' term
   76     | expr • '-' term

    ';'  shift, and go to state 188
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85


State 157

   13 stmt: TOK_IDENTIFIER '*' '=' expr • ';'
   75 expr: expr • '+' term
   76     | expr • '-' term

    ';'  shift, and go to state 189
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85


State 158

   47 type_f: TOK_FLONG TOK_FLONG TOK_FLONG TOK_FINT •

    $default  reduce using rule 47 (type_f)


State 159

   35 eventblock: TOK_QUANDO TOK_INTEGER TOK_ESTA TOK_INTEGER • '{' stmts '}'

    '{'  shift, and go to state 190


State 160

   36 funcblock: type_f TOK_IDENTIFIER '(' funcparams • ')' '{' stmts '}'
   37 funcparams: funcparams • ',' funcparam

    ')'  shift, and go to state 191
    ','  shift, and go to state 192


State 161

   38 funcparams: funcparam •

    $default  reduce using rule 38 (funcparams)


State 162

   40 funcparam: type_f • TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 193


State 163

   84 factor: TOK_IDENTIFIER '[' expr ']' •
   85       | TOK_IDENTIFIER '[' expr ']' • '[' expr ']'

    '['  shift, and go to state 194

    $default  reduce using rule 84 (factor)


State 164

   97 factor: TOK_IDENTIFIER '(' paramscall ')' •

    $default  reduce using rule 97 (factor)


State 165

   94 factor: '(' TOK_FFLOAT ')' TOK_FLOAT •

    $default  reduce using rule 94 (factor)


State 166

   95 factor: '(' TOK_FDOUBLE ')' TOK_FLOAT •

    $default  reduce using rule 95 (factor)


State 167

   91 factor: '(' TOK_FLONG TOK_FINT ')' • TOK_INTEGER

    TOK_INTEGER  shift, and go to state 195


State 168

   92 factor: '(' TOK_FLONG TOK_FLONG TOK_FINT • ')' TOK_INTEGER

    ')'  shift, and go to state 196


State 169

   90 factor: '(' TOK_FSHORT TOK_FINT ')' • TOK_INTEGER

    TOK_INTEGER  shift, and go to state 197


State 170

   93 factor: '(' TOK_FSHORT TOK_FFLOAT ')' • TOK_FLOAT

    TOK_FLOAT  shift, and go to state 198


State 171

   69 logicfactor: expr '=' '=' expr •
   75 expr: expr • '+' term
   76     | expr • '-' term

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85

    $default  reduce using rule 69 (logicfactor)


State 172

   70 logicfactor: expr '!' '=' expr •
   75 expr: expr • '+' term
   76     | expr • '-' term

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85

    $default  reduce using rule 70 (logicfactor)


State 173

   71 logicfactor: expr '<' '=' expr •
   75 expr: expr • '+' term
   76     | expr • '-' term

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85

    $default  reduce using rule 71 (logicfactor)


State 174

   72 logicfactor: expr '>' '=' expr •
   75 expr: expr • '+' term
   76     | expr • '-' term

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85

    $default  reduce using rule 72 (logicfactor)


State 175

   59 condblock: TOK_IF '(' logicexpr ')' '{' • stmts '}'
   60          | TOK_IF '(' logicexpr ')' '{' • stmts '}' elseblock

    error           shift, and go to state 1
    TOK_VOID        shift, and go to state 2
    TOK_RETURN      shift, and go to state 3
    TOK_IF          shift, and go to state 4
    TOK_WHILE       shift, and go to state 5
    TOK_PRINT       shift, and go to state 6
    TOK_OUT         shift, and go to state 7
    TOK_STEPPER     shift, and go to state 8
    TOK_SERVO       shift, and go to state 9
    TOK_DELAY       shift, and go to state 10
    TOK_IDENTIFIER  shift, and go to state 11
    TOK_FINT        shift, and go to state 12
    TOK_FFLOAT      shift, and go to state 13
    TOK_FDOUBLE     shift, and go to state 14
    TOK_FLONG       shift, and go to state 15
    TOK_FSHORT      shift, and go to state 16
    TOK_FBOOL       shift, and go to state 17
    TOK_QUANDO      shift, and go to state 18

    stmts        go to state 199
    fe           go to state 21
    stmt         go to state 22
    eventblock   go to state 23
    funcblock    go to state 24
    type_f       go to state 25
    returnblock  go to state 26
    condblock    go to state 27
    whileblock   go to state 28
    printstmt    go to state 29


State 176

   57 condblock: TOK_IF '(' logicexpr ')' stmt •
   58          | TOK_IF '(' logicexpr ')' stmt • elseblock

    TOK_ELSE  shift, and go to state 200

    $default  reduce using rule 57 (condblock)

    elseblock  go to state 201


State 177

   63 whileblock: TOK_WHILE '(' logicexpr ')' '{' • stmts '}'

    error           shift, and go to state 1
    TOK_VOID        shift, and go to state 2
    TOK_RETURN      shift, and go to state 3
    TOK_IF          shift, and go to state 4
    TOK_WHILE       shift, and go to state 5
    TOK_PRINT       shift, and go to state 6
    TOK_OUT         shift, and go to state 7
    TOK_STEPPER     shift, and go to state 8
    TOK_SERVO       shift, and go to state 9
    TOK_DELAY       shift, and go to state 10
    TOK_IDENTIFIER  shift, and go to state 11
    TOK_FINT        shift, and go to state 12
    TOK_FFLOAT      shift, and go to state 13
    TOK_FDOUBLE     shift, and go to state 14
    TOK_FLONG       shift, and go to state 15
    TOK_FSHORT      shift, and go to state 16
    TOK_FBOOL       shift, and go to state 17
    TOK_QUANDO      shift, and go to state 18

    stmts        go to state 202
    fe           go to state 21
    stmt         go to state 22
    eventblock   go to state 23
    funcblock    go to state 24
    type_f       go to state 25
    returnblock  go to state 26
    condblock    go to state 27
    whileblock   go to state 28
    printstmt    go to state 29


State 178

   25 rmatrix: '{' matrix '}' •

    $default  reduce using rule 25 (rmatrix)


State 179

   26 matrix: matrix ',' • melement

    '{'  shift, and go to state 141

    melement   go to state 203
    relements  go to state 144


State 180

   28 melement: relements ':' • TOK_INTEGER

    TOK_INTEGER  shift, and go to state 204


State 181

   30 relements: '{' elements '}' •

    $default  reduce using rule 30 (relements)


State 182

   31 elements: elements ',' • element

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    element  go to state 205
    factor   go to state 147
    unary    go to state 45


State 183

   33 element: factor ':' • TOK_INTEGER

    TOK_INTEGER  shift, and go to state 206


State 184

    8 stmt: TOK_IDENTIFIER '[' expr ']' '=' • expr ';'

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    expr    go to state 207
    term    go to state 43
    factor  go to state 44
    unary   go to state 45


State 185

    9 stmt: TOK_IDENTIFIER '(' paramscall ')' ';' •

    $default  reduce using rule 9 (stmt)


State 186

   52 paramscall: paramscall ',' expr •
   75 expr: expr • '+' term
   76     | expr • '-' term

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85

    $default  reduce using rule 52 (paramscall)


State 187

   11 stmt: TOK_IDENTIFIER '+' '=' expr ';' •

    $default  reduce using rule 11 (stmt)


State 188

   12 stmt: TOK_IDENTIFIER '-' '=' expr ';' •

    $default  reduce using rule 12 (stmt)


State 189

   13 stmt: TOK_IDENTIFIER '*' '=' expr ';' •

    $default  reduce using rule 13 (stmt)


State 190

   35 eventblock: TOK_QUANDO TOK_INTEGER TOK_ESTA TOK_INTEGER '{' • stmts '}'

    error           shift, and go to state 1
    TOK_VOID        shift, and go to state 2
    TOK_RETURN      shift, and go to state 3
    TOK_IF          shift, and go to state 4
    TOK_WHILE       shift, and go to state 5
    TOK_PRINT       shift, and go to state 6
    TOK_OUT         shift, and go to state 7
    TOK_STEPPER     shift, and go to state 8
    TOK_SERVO       shift, and go to state 9
    TOK_DELAY       shift, and go to state 10
    TOK_IDENTIFIER  shift, and go to state 11
    TOK_FINT        shift, and go to state 12
    TOK_FFLOAT      shift, and go to state 13
    TOK_FDOUBLE     shift, and go to state 14
    TOK_FLONG       shift, and go to state 15
    TOK_FSHORT      shift, and go to state 16
    TOK_FBOOL       shift, and go to state 17
    TOK_QUANDO      shift, and go to state 18

    stmts        go to state 208
    fe           go to state 21
    stmt         go to state 22
    eventblock   go to state 23
    funcblock    go to state 24
    type_f       go to state 25
    returnblock  go to state 26
    condblock    go to state 27
    whileblock   go to state 28
    printstmt    go to state 29


State 191

   36 funcblock: type_f TOK_IDENTIFIER '(' funcparams ')' • '{' stmts '}'

    '{'  shift, and go to state 209


State 192

   37 funcparams: funcparams ',' • funcparam

    TOK_VOID     shift, and go to state 2
    TOK_FINT     shift, and go to state 12
    TOK_FFLOAT   shift, and go to state 13
    TOK_FDOUBLE  shift, and go to state 14
    TOK_FLONG    shift, and go to state 15
    TOK_FSHORT   shift, and go to state 16
    TOK_FBOOL    shift, and go to state 17

    funcparam  go to state 210
    type_f     go to state 162


State 193

   40 funcparam: type_f TOK_IDENTIFIER •

    $default  reduce using rule 40 (funcparam)


State 194

   85 factor: TOK_IDENTIFIER '[' expr ']' '[' • expr ']'

    TOK_IN          shift, and go to state 31
    TOK_IDENTIFIER  shift, and go to state 32
    TOK_FLOAT       shift, and go to state 33
    TOK_INTEGER     shift, and go to state 34
    TOK_TRUE        shift, and go to state 35
    TOK_FALSE       shift, and go to state 36
    '('             shift, and go to state 49
    '-'             shift, and go to state 38

    expr    go to state 211
    term    go to state 43
    factor  go to state 44
    unary   go to state 45


State 195

   91 factor: '(' TOK_FLONG TOK_FINT ')' TOK_INTEGER •

    $default  reduce using rule 91 (factor)


State 196

   92 factor: '(' TOK_FLONG TOK_FLONG TOK_FINT ')' • TOK_INTEGER

    TOK_INTEGER  shift, and go to state 212


State 197

   90 factor: '(' TOK_FSHORT TOK_FINT ')' TOK_INTEGER •

    $default  reduce using rule 90 (factor)


State 198

   93 factor: '(' TOK_FSHORT TOK_FFLOAT ')' TOK_FLOAT •

    $default  reduce using rule 93 (factor)


State 199

    2 stmts: stmts • stmt
   59 condblock: TOK_IF '(' logicexpr ')' '{' stmts • '}'
   60          | TOK_IF '(' logicexpr ')' '{' stmts • '}' elseblock

    error           shift, and go to state 1
    TOK_VOID        shift, and go to state 2
    TOK_RETURN      shift, and go to state 3
    TOK_IF          shift, and go to state 4
    TOK_WHILE       shift, and go to state 5
    TOK_PRINT       shift, and go to state 6
    TOK_OUT         shift, and go to state 7
    TOK_STEPPER     shift, and go to state 8
    TOK_SERVO       shift, and go to state 9
    TOK_DELAY       shift, and go to state 10
    TOK_IDENTIFIER  shift, and go to state 11
    TOK_FINT        shift, and go to state 12
    TOK_FFLOAT      shift, and go to state 13
    TOK_FDOUBLE     shift, and go to state 14
    TOK_FLONG       shift, and go to state 15
    TOK_FSHORT      shift, and go to state 16
    TOK_FBOOL       shift, and go to state 17
    TOK_QUANDO      shift, and go to state 18
    '}'             shift, and go to state 213

    fe           go to state 21
    stmt         go to state 68
    eventblock   go to state 23
    funcblock    go to state 24
    type_f       go to state 25
    returnblock  go to state 26
    condblock    go to state 27
    whileblock   go to state 28
    printstmt    go to state 29


State 200

   61 elseblock: TOK_ELSE • stmt
   62          | TOK_ELSE • '{' stmts '}'

    error           shift, and go to state 1
    TOK_VOID        shift, and go to state 2
    TOK_RETURN      shift, and go to state 3
    TOK_IF          shift, and go to state 4
    TOK_WHILE       shift, and go to state 5
    TOK_PRINT       shift, and go to state 6
    TOK_OUT         shift, and go to state 7
    TOK_STEPPER     shift, and go to state 8
    TOK_SERVO       shift, and go to state 9
    TOK_DELAY       shift, and go to state 10
    TOK_IDENTIFIER  shift, and go to state 11
    TOK_FINT        shift, and go to state 12
    TOK_FFLOAT      shift, and go to state 13
    TOK_FDOUBLE     shift, and go to state 14
    TOK_FLONG       shift, and go to state 15
    TOK_FSHORT      shift, and go to state 16
    TOK_FBOOL       shift, and go to state 17
    TOK_QUANDO      shift, and go to state 18
    '{'             shift, and go to state 214

    fe           go to state 21
    stmt         go to state 215
    eventblock   go to state 23
    funcblock    go to state 24
    type_f       go to state 25
    returnblock  go to state 26
    condblock    go to state 27
    whileblock   go to state 28
    printstmt    go to state 29


State 201

   58 condblock: TOK_IF '(' logicexpr ')' stmt elseblock •

    $default  reduce using rule 58 (condblock)


State 202

    2 stmts: stmts • stmt
   63 whileblock: TOK_WHILE '(' logicexpr ')' '{' stmts • '}'

    error           shift, and go to state 1
    TOK_VOID        shift, and go to state 2
    TOK_RETURN      shift, and go to state 3
    TOK_IF          shift, and go to state 4
    TOK_WHILE       shift, and go to state 5
    TOK_PRINT       shift, and go to state 6
    TOK_OUT         shift, and go to state 7
    TOK_STEPPER     shift, and go to state 8
    TOK_SERVO       shift, and go to state 9
    TOK_DELAY       shift, and go to state 10
    TOK_IDENTIFIER  shift, and go to state 11
    TOK_FINT        shift, and go to state 12
    TOK_FFLOAT      shift, and go to state 13
    TOK_FDOUBLE     shift, and go to state 14
    TOK_FLONG       shift, and go to state 15
    TOK_FSHORT      shift, and go to state 16
    TOK_FBOOL       shift, and go to state 17
    TOK_QUANDO      shift, and go to state 18
    '}'             shift, and go to state 216

    fe           go to state 21
    stmt         go to state 68
    eventblock   go to state 23
    funcblock    go to state 24
    type_f       go to state 25
    returnblock  go to state 26
    condblock    go to state 27
    whileblock   go to state 28
    printstmt    go to state 29


State 203

   26 matrix: matrix ',' melement •

    $default  reduce using rule 26 (matrix)


State 204

   28 melement: relements ':' TOK_INTEGER •

    $default  reduce using rule 28 (melement)


State 205

   31 elements: elements ',' element •

    $default  reduce using rule 31 (elements)


State 206

   33 element: factor ':' TOK_INTEGER •

    $default  reduce using rule 33 (element)


State 207

    8 stmt: TOK_IDENTIFIER '[' expr ']' '=' expr • ';'
   75 expr: expr • '+' term
   76     | expr • '-' term

    ';'  shift, and go to state 217
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85


State 208

    2 stmts: stmts • stmt
   35 eventblock: TOK_QUANDO TOK_INTEGER TOK_ESTA TOK_INTEGER '{' stmts • '}'

    error           shift, and go to state 1
    TOK_VOID        shift, and go to state 2
    TOK_RETURN      shift, and go to state 3
    TOK_IF          shift, and go to state 4
    TOK_WHILE       shift, and go to state 5
    TOK_PRINT       shift, and go to state 6
    TOK_OUT         shift, and go to state 7
    TOK_STEPPER     shift, and go to state 8
    TOK_SERVO       shift, and go to state 9
    TOK_DELAY       shift, and go to state 10
    TOK_IDENTIFIER  shift, and go to state 11
    TOK_FINT        shift, and go to state 12
    TOK_FFLOAT      shift, and go to state 13
    TOK_FDOUBLE     shift, and go to state 14
    TOK_FLONG       shift, and go to state 15
    TOK_FSHORT      shift, and go to state 16
    TOK_FBOOL       shift, and go to state 17
    TOK_QUANDO      shift, and go to state 18
    '}'             shift, and go to state 218

    fe           go to state 21
    stmt         go to state 68
    eventblock   go to state 23
    funcblock    go to state 24
    type_f       go to state 25
    returnblock  go to state 26
    condblock    go to state 27
    whileblock   go to state 28
    printstmt    go to state 29


State 209

   36 funcblock: type_f TOK_IDENTIFIER '(' funcparams ')' '{' • stmts '}'

    error           shift, and go to state 1
    TOK_VOID        shift, and go to state 2
    TOK_RETURN      shift, and go to state 3
    TOK_IF          shift, and go to state 4
    TOK_WHILE       shift, and go to state 5
    TOK_PRINT       shift, and go to state 6
    TOK_OUT         shift, and go to state 7
    TOK_STEPPER     shift, and go to state 8
    TOK_SERVO       shift, and go to state 9
    TOK_DELAY       shift, and go to state 10
    TOK_IDENTIFIER  shift, and go to state 11
    TOK_FINT        shift, and go to state 12
    TOK_FFLOAT      shift, and go to state 13
    TOK_FDOUBLE     shift, and go to state 14
    TOK_FLONG       shift, and go to state 15
    TOK_FSHORT      shift, and go to state 16
    TOK_FBOOL       shift, and go to state 17
    TOK_QUANDO      shift, and go to state 18

    stmts        go to state 219
    fe           go to state 21
    stmt         go to state 22
    eventblock   go to state 23
    funcblock    go to state 24
    type_f       go to state 25
    returnblock  go to state 26
    condblock    go to state 27
    whileblock   go to state 28
    printstmt    go to state 29


State 210

   37 funcparams: funcparams ',' funcparam •

    $default  reduce using rule 37 (funcparams)


State 211

   75 expr: expr • '+' term
   76     | expr • '-' term
   85 factor: TOK_IDENTIFIER '[' expr ']' '[' expr • ']'

    ']'  shift, and go to state 220
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85


State 212

   92 factor: '(' TOK_FLONG TOK_FLONG TOK_FINT ')' TOK_INTEGER •

    $default  reduce using rule 92 (factor)


State 213

   59 condblock: TOK_IF '(' logicexpr ')' '{' stmts '}' •
   60          | TOK_IF '(' logicexpr ')' '{' stmts '}' • elseblock

    TOK_ELSE  shift, and go to state 200

    $default  reduce using rule 59 (condblock)

    elseblock  go to state 221


State 214

   62 elseblock: TOK_ELSE '{' • stmts '}'

    error           shift, and go to state 1
    TOK_VOID        shift, and go to state 2
    TOK_RETURN      shift, and go to state 3
    TOK_IF          shift, and go to state 4
    TOK_WHILE       shift, and go to state 5
    TOK_PRINT       shift, and go to state 6
    TOK_OUT         shift, and go to state 7
    TOK_STEPPER     shift, and go to state 8
    TOK_SERVO       shift, and go to state 9
    TOK_DELAY       shift, and go to state 10
    TOK_IDENTIFIER  shift, and go to state 11
    TOK_FINT        shift, and go to state 12
    TOK_FFLOAT      shift, and go to state 13
    TOK_FDOUBLE     shift, and go to state 14
    TOK_FLONG       shift, and go to state 15
    TOK_FSHORT      shift, and go to state 16
    TOK_FBOOL       shift, and go to state 17
    TOK_QUANDO      shift, and go to state 18

    stmts        go to state 222
    fe           go to state 21
    stmt         go to state 22
    eventblock   go to state 23
    funcblock    go to state 24
    type_f       go to state 25
    returnblock  go to state 26
    condblock    go to state 27
    whileblock   go to state 28
    printstmt    go to state 29


State 215

   61 elseblock: TOK_ELSE stmt •

    $default  reduce using rule 61 (elseblock)


State 216

   63 whileblock: TOK_WHILE '(' logicexpr ')' '{' stmts '}' •

    $default  reduce using rule 63 (whileblock)


State 217

    8 stmt: TOK_IDENTIFIER '[' expr ']' '=' expr ';' •

    $default  reduce using rule 8 (stmt)


State 218

   35 eventblock: TOK_QUANDO TOK_INTEGER TOK_ESTA TOK_INTEGER '{' stmts '}' •

    $default  reduce using rule 35 (eventblock)


State 219

    2 stmts: stmts • stmt
   36 funcblock: type_f TOK_IDENTIFIER '(' funcparams ')' '{' stmts • '}'

    error           shift, and go to state 1
    TOK_VOID        shift, and go to state 2
    TOK_RETURN      shift, and go to state 3
    TOK_IF          shift, and go to state 4
    TOK_WHILE       shift, and go to state 5
    TOK_PRINT       shift, and go to state 6
    TOK_OUT         shift, and go to state 7
    TOK_STEPPER     shift, and go to state 8
    TOK_SERVO       shift, and go to state 9
    TOK_DELAY       shift, and go to state 10
    TOK_IDENTIFIER  shift, and go to state 11
    TOK_FINT        shift, and go to state 12
    TOK_FFLOAT      shift, and go to state 13
    TOK_FDOUBLE     shift, and go to state 14
    TOK_FLONG       shift, and go to state 15
    TOK_FSHORT      shift, and go to state 16
    TOK_FBOOL       shift, and go to state 17
    TOK_QUANDO      shift, and go to state 18
    '}'             shift, and go to state 223

    fe           go to state 21
    stmt         go to state 68
    eventblock   go to state 23
    funcblock    go to state 24
    type_f       go to state 25
    returnblock  go to state 26
    condblock    go to state 27
    whileblock   go to state 28
    printstmt    go to state 29


State 220

   85 factor: TOK_IDENTIFIER '[' expr ']' '[' expr ']' •

    $default  reduce using rule 85 (factor)


State 221

   60 condblock: TOK_IF '(' logicexpr ')' '{' stmts '}' elseblock •

    $default  reduce using rule 60 (condblock)


State 222

    2 stmts: stmts • stmt
   62 elseblock: TOK_ELSE '{' stmts • '}'

    error           shift, and go to state 1
    TOK_VOID        shift, and go to state 2
    TOK_RETURN      shift, and go to state 3
    TOK_IF          shift, and go to state 4
    TOK_WHILE       shift, and go to state 5
    TOK_PRINT       shift, and go to state 6
    TOK_OUT         shift, and go to state 7
    TOK_STEPPER     shift, and go to state 8
    TOK_SERVO       shift, and go to state 9
    TOK_DELAY       shift, and go to state 10
    TOK_IDENTIFIER  shift, and go to state 11
    TOK_FINT        shift, and go to state 12
    TOK_FFLOAT      shift, and go to state 13
    TOK_FDOUBLE     shift, and go to state 14
    TOK_FLONG       shift, and go to state 15
    TOK_FSHORT      shift, and go to state 16
    TOK_FBOOL       shift, and go to state 17
    TOK_QUANDO      shift, and go to state 18
    '}'             shift, and go to state 224

    fe           go to state 21
    stmt         go to state 68
    eventblock   go to state 23
    funcblock    go to state 24
    type_f       go to state 25
    returnblock  go to state 26
    condblock    go to state 27
    whileblock   go to state 28
    printstmt    go to state 29


State 223

   36 funcblock: type_f TOK_IDENTIFIER '(' funcparams ')' '{' stmts '}' •

    $default  reduce using rule 36 (funcblock)


State 224

   62 elseblock: TOK_ELSE '{' stmts '}' •

    $default  reduce using rule 62 (elseblock)
